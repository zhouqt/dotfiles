#-------------------------------------
# vim:ft=muttrc fdm=marker
#
# Zhouqt's Mutt Configure
# Create at 2007-12-07 15:37
#
#-------------------------------------

## General Setting {{{
# 编辑器
set editor="vim -c 'set tw=70 et ' '+/^$' "
set edit_headers=yes
set text_flowed=yes

set sendmail_wait = 10
set print_command="enscript -v -Email -G --word-wrap -f Palatino-Roman@11"

# Use Maildir instead of mbox
set mbox_type=Maildir
set mask="!^\\.[^.]"
# 禁止对已缓存文件内容的校验
set maildir_header_cache_verify=no

# get notified if new mail arrived in inbox
mailboxes ! =inbox
# mailboxes "=Gmail"

#do not resume postponed mail
set recall=no

set check_new = yes
set timeout = 600
# }}}


## Display format {{{

# 格式字符串，用来控制你的index的列表显示。
set index_format="%5C %3Z %{%m/%d} %-10.10L (%5l) %s"
#set index_format="%5C %3Z %?M?%-22.22n (%M)&%-26.26n? >> %?y?[%Y] %s&%s? %> %?X?\A& ? (%5l) %{%F %T}"

# 在回信时引用原文是否加入原文的邮件头
set header=no
#当按q退出时，是否提示(ask-yes,ask-no)，还是直接退出(yes)，还是根本不理你(no)。
#可以设置为 yes, no, ask-yes, 或者 ask-no.
set quit=ask-no
# 当退出时，是否提示把信件从 spool 移动到的 mbox 文件
set move=no

#preferred file type order when viewing multipart/alternative emails
unalternative_order *
#alternative_order text/enriched text/plain text/html
alternative_order text/*

# auto view settings
auto_view text/html application/msword text/enriched text/rtf
set mailcap_path=~/.mutt/mailcap_`uname -s|tr '[:upper:]' '[:lower:]'`
# this may fix some long url problems in html emails
set pipe_decode=yes
#don't confirm when appending messages to a mailbox
set confirmappend=no

set strict_threads
## 排序方式。有以下方式可选:
##   date date-sent date-received from mailbox-order (unsorted)
##   score size subject threads to
## 每种方式可以在前面加一个 "reverse-" 前缀表示反方向排序。
#set sort=reverse-date-sent
set sort=reverse-threads
## 当用 thread 排序方式时，我们对各个 thread 的相对排序顺序。
set sort_aux=last-date-received
set sort_browser=reverse-date # showing mbox list default to newest first
## 当 Mutt 用 thread 方式显示时，是否用纯 ascii 表示树状列表。
set ascii_chars=no
## don't collapse threads w/ unread messages
set collapse_unread=no

# 外部程序退出时，是否要求用户按一个键才返回。
# 这在察看某些shell命令输出时是必要的，
# 否则它们一下就消失了。
set wait_key=yes
#当你要把信件存到另一个信箱，而这个信箱已经存在时，是否提示附加？
set noconfirmappend
#是否把邮件头也放在编辑器里可以修改？
set edit_headers=no
#当你在用 pager 看信件时，在 index 留出多少行显示邮件列表？
set pager_index_lines=5
#如果翻到最后，再按往下翻也不会翻到下一封信件
set pager_stop
#当你按 "t" 或者 "D" 之类的标记操作时，是否自动把光标移动到下一封信件。
set resolve=yes

# 将邮件正文解码再搜索
set thorough_search=yes
# }}}


## Address book {{{
set query_format = "%4c %t %-30.30n %-51.51a %?e?(%e)?"
# set query_format = `~/.mutt/query_format`
set query_command = "echo ; run-parts -a '%s' ~/.mutt/contacts/|grep '@'"
## 使用lbdb方式查询地址本
# set query_command="lbdbq %s"
# }}}


## 回复邮件设置 {{{
#回信时是否包含原文。
set include
# 设置回复时的引用文本格式。
set attribution="* On %{%F %T %z}, %n (%a) wrote:"
#回信的引文之前插入那个符号
set indent_str="> "
#如果设置，当你按 "r" 回信时，就不会再提示你输入回信地址和主题，直接进入编辑模式。
set fast_reply
#no reply to myself
unset metoo
unset reply_self
# 识别邮件是否是一个回复的字符串
set reply_regexp="^((Re|RE|re)([\[0-9\]+])*|aw):[ \t]*"
# }}}


## Subscription {{{
## 告诉 Mutt 你已经订阅了那些邮件列表(mailing-list).
# subscribe fvwm@fvwm.org
# subscribe -group uq
# subscribe -group lst ruby-talk@ruby-lang.org
# }}}


# Charset settings {{{
set allow_8bit
# 终端编码
set charset="utf8"

#send_charset 只有当前面的字符集不能正确表示信件内容时才会使用后面的。
#比如，如果你像下面这样设置，你的信件如果全是英文，那么信件就会被设置为 us-ascii 编码，
#如果出现了法语字符，那么就会用 iso-8859-1，如果出现了汉字就会用 gb2312，
#如果以上都不是，那么就用 utf-8。
#
set send_charset="utf-8:us-ascii:iso-8859-1:big5:gb2312"

#mutt显示日期为中文
#set locale="zh_CN.UTF-8"
#set locale="utf-8"
#有些没有设置字符编码时
#charset-hook ^us-ascii$ gb2312
## 服务器发出来的信件使用了 quoted-printable 的 subject，
## 而且设置编码为 "iso8859-1"，这显然是错误的。
## 对付这个错误的办法是把 iso-8859-1 变成 gb2312 的别名
#charset-hook ^iso-8859-1$ gb2312
## evolution 发过来的 subject 为 utf-8 编码的邮件标题乱码！
## 那就把不是 utf-8 的编码都映射到 gb2312
#charset-hook !utf-8 gb2312
set assumed_charset="gb2312:utf-8:big5"
# 支持rfc2047中定义的附件文件格式，用来支持outlook之类
# use rfc2047 standard instead of rfc2231, solve the chinese attachment name issue
set rfc2047_parameters=yes
# }}}


##  Send setting {{{

## 设置我自己的名称。
#my_hdr From: xx_username_x <xx_username_x@redhat.com>
## 定制邮件客户端字段。
#my_hdr X-Mailer: Mutt.

# 实现从多个账户发送信件
set use_from=yes
# 此选项确保从真正的邮送域发送信件
set envelope_from=yes
# set realname='xx_fullname_x'
# set reverse_name=no         # I prefer to use my tailed "from"
# set reverse_realname=no     # I prefer to use my own "realname"
# alternates 'xx_username_x@gmail.com|xx_username_x@canonical.com'

#treat all unread messages as new
set mark_old=no
# don't forget to include the attachments in forward emails
set mime_forward
set mime_forward_rest
#default subject when forwarding
set forward_format="Fwd: %s"
# }}}


##  Color theme {{{
source ~/.mutt/muttrc.color
# }}}


## PGP settings {{{
# source ~/.mutt/muttrc.gpg
# }}}


## Key Bindings {{{

# 阅读正文时的光标行为
#bind pager <left>       half-up
#bind pager <right>      half-down
#bind pager <up>         previous-line
#bind pager <down>       next-line
#bind pager <left>       previous-entry
#bind pager <right>      next-entry
bind pager <pageup>     half-up
bind pager <pagedown>   half-down
bind pager j            next-line
bind pager k            previous-line
bind pager <Up>         previous-line
bind pager <Down>       next-line
bind pager <backspace>  previous-line
bind pager gg           top
bind pager G            bottom
# 浏览首页时的光标行为
bind index gg           first-entry
bind index G            last-entry
bind index \cf          next-page
bind index \cb          previous-page
bind index <up>         previous-entry
bind index <down>       next-entry
bind index <left>       previous-line
bind index <right>      next-line
#bind index,pager   ,g      group-reply

## Bindings for editing and reloading the .muttrc
macro  generic  ,vu  '<enter-command> set my_status="Reloaded configuration";\
source ~/.muttrc; set ?my_status<enter>'  "Custom -- Reload muttrc "

# Mark all mail as read.
macro index ,r '<tag-pattern>~N<enter><tag-prefix-cond><clear-flag>N\
<untag-pattern>.<enter><enter-command> set my_echo="All mail marked read"<enter>\
<enter-command> set ?my_echo<enter>' "Custom -- mark all read"

macro pager ,t     '<enter-command> unignore to cc bcc<enter> q<enter>'    "Custom -- Display To Cc Bcc User-Agent date"
macro pager ,nt    '<enter-command> ignore to cc bcc<enter> q<enter>'      "Custom -- Donnot display To Cc Bcc User-Agent date"
# Run getmail
macro index \\\\ "!getmail -v -n\n" "Custom -- Invoke getmail"
macro pager \\\\ "!getmail -n -v\n" "Custom -- Invoke getmail"
macro index G "<enter-command> set my_echo="'G' can't do anything now"<enter>"
macro pager G "<enter-command> set my_echo="'G' can't do anything now"<enter>"

# Switch accounts
source ~/.mutt/account.business
macro index <f2> '<enter-command>source ~/.mutt/account.personal<enter><change-folder>!<enter>'
macro index <f3> '<enter-command>source ~/.mutt/account.business<enter><change-folder>!<enter>'

# use tab to switch between accounts, inspired by
#  http://msmtp.sourceforge.net/doc/msmtp.html#Using-msmtp-with-Mutt
macro generic \Cx| "<enter-command>source"
macro generic \Cx& "<enter-command>macro index \\t \"\\Cx"
macro index <tab> "\Cx0"    # default change to account 1, this will be redefined once pressed
macro generic \Cx0 "\Cx| ~/.mutt/account.personal\"\n\Cx&1\"<enter><change-folder>!<enter>"
macro generic \Cx1 "\Cx| ~/.mutt/account.business\"\n\Cx&0\"<enter><change-folder>!<enter>"

#bogofilter
macro index S "|bogofilter -s\n<save-message>=spam/\n"  "Learn as spam and save to junk"
macro pager S "|bogofilter -s\n<save-message>=spam/\n"  "Learn as spam and save to junk"
macro index H "|bogofilter -n\n<save-message>=inbox/\n"          "Learn as ham and save"
macro pager H "|bogofilter -n\n<save-message>=inbox/\n"          "Learn as ham and save"

#urlview
macro pager \cu "|urlview \n"
# }}}


## Hooks {{{
# “垃圾箱”功能。第一次按 "d" 时有可能会被讯问是否建立这个信箱(Trash).
# folder-hook . 'macro index d "~/mail/Trash\n"'
# folder-hook ~/mail/Trash 'bind index d delete-message'

# sent.*(发件箱) 里只显示 To: Subject: Date: 三项。而在其它信箱就显示 From: Subject: X-Mailer: Date: 这几项。
folder-hook . "ignore *; unignore From subject X-mailer"
folder-hook sent.* "ignore *; unignore to subject date"
# }}}
