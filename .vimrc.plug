" vim: ft=vim
"

let g:plug_url_format = 'git@github.com:%s.git'

call plug#begin("~/.vim/plugged")
"===================Plug loading starts========================================

" ------------------  readability
Plug 'The-NERD-tree'
nmap <F3>   :NERDTreeToggle<CR>
let g:NERDTreeWinPos="right"

Plug 'delimitMate.vim'

Plug 'airblade/vim-gitgutter'

Plug 'rainbow_parentheses.vim'
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
"call :RainbowParenthesesToggle()
nmap <leader>r  :RainbowParenthesesToggle<cr>
au VimEnter * RainbowParenthesesToggle
"au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

Plug 'bling/vim-airline'
let g:airline#extensions#tabline#enabled=1
let g:airline_theme='murmur'
"let g:airline_powerline_fonts=1

Plug 'tomasr/molokai'

" ------------------  operability

Plug 'The-NERD-Commenter'
let g:NERDShutUp=1
nmap <F9> <leader>c<SPACE>
vmap <F9> <leader>c<SPACE>

Plug 'junegunn/vim-easy-align'
vmap <Enter> <Plug>(EasyAlign)
nmap ga      <Plug>(EasyAlign)

Plug 'Syntastic'

Plug 'vim-misc'
Plug 'xolox/vim-easytags'
let g:easytags_dynamic_files = 2
let g:easytags_events = ['BufWritePost']

" Unite gang
Plug 'Shougo/vimproc', {'do': 'make'}
Plug 'Shougo/unite.vim'
Plug 'Shougo/unite-outline'
let g:unite_source_history_yank_enable = 1
let g:unite_source_grep_command = 'ag'
let g:unite_source_grep_default_opts = '--nocolor --nogroup'
let g:unite_source_grep_recursive_opt = ''
let g:unite_source_grep_max_candidates = 200
nnoremap <leader>f :<C-u>Unite -no-split -buffer-name=files -start-insert file_rec/async<cr>
nnoremap <leader>/ :<C-u>Unite -no-split -buffer-name=code  -auto-preview -start-insert grep:.<cr>
nnoremap <leader>o :<C-u>Unite -no-split -buffer-name=outline -start-insert outline<cr>
nnoremap <leader>n :<C-u>Unite -quick-match buffer<cr>
"nnoremap <leader>t :<C-u>Unite -no-split -buffer-name=files   -start-insert file<cr>
"nnoremap <leader>r :<C-u>Unite -no-split -buffer-name=mru     -start-insert file_mru<cr>
"nnoremap <leader>y :<C-u>Unite -no-split -buffer-name=yank    history/yank<cr>
"nnoremap <leader>e :<C-u>Unite -no-split -buffer-name=buffer  buffer<cr>

" ------------------  syntax
Plug 'bbcode', { 'for' : 'bbcode' }

autocmd BufNewFile,BufRead *.coffee set ft=coffee
Plug 'vim-coffee-script', {'for': 'coffee'}

Plug 'rodjek/vim-puppet', { 'for' : 'puppet' }

Plug 'bruno-/vim-ruby-fold', { 'for': 'ruby' }

Plug 'slim-template/vim-slim', {'for': 'slim'}

autocmd BufNewFile,BufRead *.markdown,*mkd setfiletype octopress
Plug 'tangledhelix/vim-octopress', {'for' : 'octopress'}

Plug 'elixir-lang/vim-elixir', { 'for' : 'elixir' }
autocmd FileType elixir setlocal nofoldenable

Plug 'openssl.vim'

"===================Plug loading ends==========================================
call plug#end()

call unite#filters#matcher_default#use(['matcher_fuzzy'])
call unite#filters#sorter_default#use(['sorter_rank'])
"Plug 'Solarized'
"Plug 'railscasts'
"Plug 'Solarized'
"if has 256 colour, use a 256 colour theme
if $TERM =~ '^\(xterm\|screen\)' || $TERM =~ '256color$' || has("gui_running")
    if !has("gui_running")
        set t_Co=256
    endif
    "colorscheme inkpot
    "colorscheme leo
    colorscheme molokai
else
    colorscheme tango
endif

